name: (CI) Cypress Run
on:
  workflow_call:
    inputs:
      projects:
        required: true
        type: string
      skip-cache:
        required: false
        type: boolean
      tags:
        required: false
        type: string

jobs:
  runner-choice:
    runs-on: ubuntu-latest
    outputs:
      runner: ${{ steps.step.outputs.runner }}
    steps:
      - name: Check branch
        id: step
        run: |
          if [[ "${{ github.base_ref }}" == "main" ]]; then
            echo "runner=mainnet-compatible-runner" >> $GITHUB_OUTPUT
          elif [[ "${{ github.base_ref }}" == "develop" && "${{ github.ref_name }}" == "main" ]]; then
            echo "runner=mainnet-compatible-runner" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "push" && "${{ github.ref_name }}" == *"release/mainnet"* ]]; then
            echo "runner=mainnet-compatible-runner" >> $GITHUB_OUTPUT
          else
            echo "runner=self-hosted-runner" >> $GITHUB_OUTPUT
          fi

      - name: Print runner
        run: echo ${{ steps.step.outputs.runner }}

  # This only exists becuase we cannot do an if based on the matrix values at the job level
  # so this step removes governance from the array and sets the output to be the remaining projects
  e2e-filter:
    needs: runner-choice
    runs-on: ${{ needs.runner-choice.outputs.runner }}
    outputs:
      projects: ${{ steps.set-projects.outputs.projects }}
    steps:
      - name: Verify inputs
        run: |
          echo "Check inputs to action"
          echo "projects: ${{ fromJSON(inputs.projects) }}"
      - name: Filter out governance
        run: |
          echo ${{ inputs.projects }} | jq '[.[] | select(contains("governance") | not)]'
      - name: Set output
        id: set-projects
        run: |
          echo projects=$(${{ inputs.projects }} | jq '[.[] | select(contains("governance") | not)]')  >> $GITHUB_OUTPUT
      - name: Set output
        id: set-projects
        run: |
          echo ${{ steps.set-projects.outputs.projects }}

  e2e:
    strategy:
      fail-fast: false
      matrix:
        project: ${{ fromJSON(e2e-filter.outputs.projects) }}
    name: ${{ matrix.project }}
    needs: [runner-choice, e2e-filter]
    runs-on: ${{ needs.runner-choice.outputs.runner }}
    timeout-minutes: 120
    steps:
      - name: Install vega & vegacapsule
        run: |
          sudo install-vega v0.78.0-preview.1
          sudo install-vegacapsule v0.78.0-preview.1

      # Checks if skip cache was requested
      - name: Set skip-nx-cache flag
        if: ${{ inputs.skip-cache == true }}
        run: echo "SKIP_CACHE=--skip-nx-cache" >> $GITHUB_ENV

      # Checkout front ends
      - name: Checkout frontend mono repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: './frontend-monorepo'
          ref: ${{ github.event.pull_request.head.sha || github.sha }}

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: './frontend-monorepo/.nvmrc'
          cache: yarn
          cache-dependency-path: './frontend-monorepo/yarn.lock'

      # Restore node_modules from cache if possible
      - name: Restore node_modules from cache
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: |
            frontend-monorepo/node_modules
            /home/github-runner/.cache/Cypress
          key: node_modules_cypress-${{ hashFiles('frontend-monorepo/yarn.lock', 'frontend-monorepo/package.json') }}

      # Install frontend dependencies
      - name: Install root dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
        working-directory: frontend-monorepo

      # Make sure that all Cypress binaries are installed properly
      - name: Install cypress bins
        run: yarn cypress install
        working-directory: frontend-monorepo

      ######
      ## Setup Vegacapsule and Vega wallet
      ######

      - name: Run Vegacapsule network and Vega wallet
        id: setup-vega
        uses: ./frontend-monorepo/.github/actions/run-vegacapsule
        timeout-minutes: 10

      ######
      ## Run some tests
      ######

      - name: Run Cypress tests
        run: yarn nx run ${{ matrix.project }}:e2e ${{ env.SKIP_CACHE }} --browser chrome --env.grepTags="${{ inputs.tags }}"
        working-directory: frontend-monorepo
        env:
          CYPRESS_SLACK_WEBHOOK: ${{ secrets.CYPRESS_SLACK_WEBHOOK }}
          CYPRESS_VEGA_WALLET_API_TOKEN: ${{ steps.setup-vega.outputs.token }}

      ######
      ## Upload logs
      ######

      # Artifact path is not valid: /ganache-1/capsule-logscolletor.stderr-2022-12-22T10:20:30Z.log. Contains the following character:  Colon :
      - name: Rename files to allow archive
        if: ${{ always() }}
        run: |
          while read -r file; do
            mv "${file}" "$(echo ${file} | sed 's|:|-|g')"
          done< <(find /home/github-runner/.vegacapsule/testnet/logs -type f)

      - name: Print logs files
        if: ${{ always() }}
        run: ls -alsh /home/github-runner/.vegacapsule/testnet/logs/

      - uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
          name: logs-${{ matrix.project }}
          path: /home/github-runner/.vegacapsule/testnet/logs

      - uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
          name: test-report-${{ matrix.project }}
          path: frontend-monorepo/apps/${{ matrix.project }}/cypress/reports
