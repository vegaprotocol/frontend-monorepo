name: (CD) Publish docker + s3

on:
  workflow_call:
    inputs:
      projects:
        required: true
        type: string

jobs:
  publish-dist:
    strategy:
      fail-fast: false
      matrix:
        app: ${{ fromJSON(inputs.projects) }}
    name: ${{ matrix.app }}
    runs-on: ubuntu-22.04
    timeout-minutes: 25
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up QEMU
        id: quemu
        uses: docker/setup-qemu-action@v2

      - name: Available platforms
        run: echo ${{ steps.qemu.outputs.platforms }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry (ghcr)
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to the Container registry (docker hub)
        uses: docker/login-action@v2
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        with:
          # registry: registry.hub.docker.com
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          # https://stackoverflow.com/questions/61010294/how-to-cache-yarn-packages-in-github-actions
          cache: yarn

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-cache-node-modules-${{ hashFiles('yarn.lock') }}

      # https://docs.github.com/en/actions/learn-github-actions/contexts
      - name: Define dist variables
        if: ${{ github.event_name == 'push' }}
        run: |
          envName=''
          domain="vega.rocks"
          bucketName=''

          if [[ "${{ github.ref }}" =~ .*release/.* ]]; then
            envName="$(echo ${{ github.ref }} | rev | cut -d '/' -f 1 | rev)"
          elif [[ "${{ github.ref }}" =~ .*develop$ ]]; then
            envName="stagnet1"
          elif [[ "${{ github.ref }}" =~ .*main$ ]]; then
            envName="mainnet"
          elif [[ "${{ matrix.app}}" = "trading" ]] && [[ "${{ startsWith(github.ref, 'refs/tags/v') && 'true' || 'false' }}" = "true" ]]; then
            envName="mainnet"
          fi

          if [[ "${envName}" = "mainnet" ]]; then
            domain="vega.xyz"
            bucketName="${{ matrix.app }}.${domain}"
          elif [[ "${envName}" = "testnet" ]]; then
            domain="fairground.wtf"
            bucketName="${{ matrix.app }}.${domain}"
          fi

          if [[ -z "${bucketName}" ]]; then
            bucketName="${{ matrix.app }}.${envName}.${domain}"
          fi

          echo "bucket name: ${bucketName}"
          echo "env name: ${envName}"

          echo BUCKET_NAME=${bucketName} >> $GITHUB_ENV
          echo ENV_NAME=${envName} >> $GITHUB_ENV

      - name: Build local dist
        run: |
          flags=""
          if [[ ! -z "${{ env.ENV_NAME }}" ]]; then
            if [[ "${{ env.ENV_NAME }}" != "ops-vega" ]]; then
              flags="--env=${{ env.ENV_NAME }}"
            fi
          fi

          if [ "${{ matrix.app }}" = "trading" ]; then
            yarn nx export trading $flags || (yarn install && yarn nx export trading $flags)
            DIST_LOCATION=dist/apps/trading/exported
          else
            yarn nx build ${{ matrix.app }} $flags || (yarn install && yarn nx build ${{ matrix.app }} $flags)
            DIST_LOCATION=dist/apps/${{ matrix.app }}
          fi
          mv $DIST_LOCATION dist-result
          tree dist-result

      - name: Build and export to local Docker
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: docker/node-outside-docker.Dockerfile
          load: true
          build-args: |
            APP=${{ matrix.app }}
            ENV_NAME=${{ env.ENV_NAME }}
          tags: |
            ghcr.io/vegaprotocol/frontend/${{ matrix.app }}:local

      - name: Image digest
        if: ${{ github.event_name == 'pull_request' }}
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Sanity check docker image
        run: |
          echo "Check ipfs-hash"
          docker run --rm ghcr.io/vegaprotocol/frontend/${{ matrix.app }}:local cat /ipfs-hash
          docker run --rm ghcr.io/vegaprotocol/frontend/${{ matrix.app }}:local cat /ipfs-hash > ${{ matrix.app }}-ipfs-hash
          echo "List html directory"
          docker run --rm ghcr.io/vegaprotocol/frontend/${{ matrix.app }}:local sh -c 'apk add --update tree; tree /usr/share/nginx/html'

      - name: Publish dist as docker image (ghcr)
        uses: docker/build-push-action@v3
        if: ${{ github.event_name == 'pull_request' || (matrix.app == 'trading' && github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/v') ) }}
        with:
          context: .
          file: docker/node-outside-docker.Dockerfile
          push: true
          build-args: |
            APP=${{ matrix.app }}
            ENV_NAME=${{ env.ENV_NAME }}
          tags: |
            ghcr.io/vegaprotocol/frontend/${{ matrix.app }}:${{ github.event.pull_request.head.sha || github.sha }}

      - name: Publish dist as docker image (docker hub)
        uses: docker/build-push-action@v3
        if: ${{ matrix.app == 'trading' && github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}
        with:
          context: .
          file: docker/node-outside-docker.Dockerfile
          push: true
          build-args: |
            APP=${{ matrix.app }}
            ENV_NAME=${{ env.ENV_NAME }}
          tags: |
            vegaprotocol/${{ matrix.app }}:${{ github.ref_name }}
            vegaprotocol/${{ matrix.app }}:mainnet

      # bucket creation in github.com/vegaprotocol/terraform//frontend
      - name: Publish dist to s3
        uses: jakejarvis/s3-sync-action@master
        if: ${{ github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/v') && ( matrix.app != 'trading' || (matrix.app == 'trading' && !endsWith(github.ref, 'main') ) ) }}
        with:
          args: --acl private --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ env.BUCKET_NAME }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'eu-west-1'
          SOURCE_DIR: 'dist-result'

      - name: Add preview label
        uses: actions-ecosystem/action-add-labels@v1
        if: ${{ github.event_name == 'pull_request' }}
        with:
          labels: ${{ matrix.app }}-preview
          number: ${{ github.event.number }}

      - name: Trigger fleek deployment
        if: ${{ matrix.app == 'trading' && github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}
        run: |
          # display info about app
          curl -H "Authorization: ${{ secrets.FLEEK_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{"query": "query{getSiteById(siteId:\"f8f2e051-f18e-49e6-b876-0a39369dc0d8\"){id latestDeploy{id status}}}"}' \
            https://api.fleek.co/graphql

          # trigger new deployment as base image is always set to vegaprotocol/trading:mainnet
          curl -H "Authorization: ${{ secrets.FLEEK_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{"query": "mutation{triggerDeploy(siteId:\"f8f2e051-f18e-49e6-b876-0a39369dc0d8\"){id status}}"}' \
            https://api.fleek.co/graphql

      - name: Check out ipfs-redirect
        if: ${{ matrix.app == 'trading' && github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}
        uses: actions/checkout@v3
        with:
          repository: 'vegaprotocol/ipfs-redirect'
          path: 'ipfs-redirect'
          fetch-depth: '0'
          token: ${{ secrets.VEGA_CI_BOT_GITHUB_TOKEN }}

      - name: Update console.vega.xyz DNS to redirect to the new console
        if: ${{ matrix.app == 'trading' && github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}
        env:
          GH_TOKEN: ${{ secrets.VEGA_CI_BOT_GITHUB_TOKEN }}
        run: |
          curl -L https://dist.ipfs.tech/kubo/v0.20.0/kubo_v0.20.0_linux-amd64.tar.gz -o kubo.tgz
          tar -xzf kubo.tgz
          export PATH="$PATH:$PWD/kubo"
          which ipfs
          new_hash=$(cat ${{ matrix.app }}-ipfs-hash)
          new_cid=$(ipfs cid format -v 1 -b base32 $new_hash)

          ls -al ipfs-redirect

          echo $new_hash > ipfs-redirect/cidv0.txt
          echo $new_cid > ipfs-redirect/cidv1.txt

          (
            cd ipfs-redirect

            git status
            cat .git/config
            git config --global user.email "vega-ci-bot@vega.xyz"
            git config --global user.name "vega-ci-bot"

            branch_name="update-hash-${{ github.ref }}"
            git checkout -b "$branch_name"
            commit_msg="Automated hash update from ${{ github.ref }}"
            git add cidv0.txt cidv1.txt
            git commit -m "$commit_msg"
            git push -u origin "$branch_name"
            pr_url="$(gh pr create --title "${commit_msg}" --body 'automated pull request to update CIDs')"
            echo $pr_url
            # once auto merge get's enabled on documentation repo let's do follow up
            sleep 5
            gh pr merge "${pr_url}" --delete-branch --squash --admin
          )

          # # Generate console URL
          # new_console_url_type=ipfs
          # # new_console_url_type=ipns
          # new_console_url_domain=cf-ipfs.com
          # # new_console_url_domain=dweb.link
          # new_console_url="https://${new_cid}.${new_console_url_type}.${new_console_url_domain}/"
          # echo "new_console_url=${new_console_url}"

          # # Update record in DNSimple
          # # docs: https://developer.dnsimple.com/v2/zones/records/#updateZoneRecord
          # dnsimple_account_id=84895
          # dnsimple_zone_name=console.vega.xyz
          # dnsimple_record_id=44409591
          # # see: https://dnsimple.com/a/84895/domains/console.vega.xyz/records/44409591/edit

          # curl  -H 'Authorization: Bearer ${{ secrets.DNSIMPLE_API_TOKEN }}' \
          #       -H 'Accept: application/json' \
          #       -H 'Content-Type: application/json' \
          #       -X PATCH \
          #       -d "{
          #             \"content\": \"${new_console_url}\"
          #       }" \
          #       https://api.dnsimple.com/v2/${dnsimple_account_id}/zones/${dnsimple_zone_name}/records/${dnsimple_record_id}
