name: Release Console

on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: 'Release version (e.g., v1.2.3)'
        required: true
      commitHash:
        description: 'Commit hash to tag'
        required: true
      environment:
        description: 'Deployment environment (main or testnet)'
        required: true
        default: 'main'

env:
  E2E_TEST_WORKFLOW: ./.github/workflows/trading-e2e-test-run.yml

jobs:
  setup_release_branch:
    runs-on: ubuntu-22.04
    outputs:
      branch_name: ${{ steps.prepare_branch.outputs.branch_name }}
    steps:
      - name: Checkout code at commit hash
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.commitHash }}
          token: ${{ secrets.VEGA_CI_BOT_GITHUB_TOKEN }}

      - name: Create Tag
        run: git tag ${{ github.event.inputs.releaseVersion }} ${{ github.event.inputs.commitHash }}

      - name: Push Tag
        run: git push origin tag ${{ github.event.inputs.releaseVersion }}

      - name: Prepare release branch
        id: prepare_branch
        run: |
          BRANCH_NAME="release/${{ github.event.inputs.environment }}/${{ github.event.inputs.releaseVersion }}"
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_ENV
          echo "::set-output name=branch_name::$BRANCH_NAME"
          git fetch --all
          git checkout -b $BRANCH_NAME origin/${{ github.event.inputs.environment }}
          git push --set-upstream origin $BRANCH_NAME

  run_e2e_tests:
    needs: setup_release_branch
    uses: ./.github/workflows/trading-e2e-test-run.yml
    with:
      github-sha: ${{ needs.setup_release_branch.outputs.branch_name }}

  await_approval:
    runs-on: ubuntu-latest
    if: always()
    environment:
      name: release-approval
    steps:
      - name: Await Manual Approval
        run: |
          echo "Awaiting manual approval to proceed with the release."

  deploy:
    needs: [setup_release_branch, await_approval]
    runs-on: ubuntu-22.04
    if: ${{ needs.await_approval.result == 'success' }}
    steps:
      - name: Checkout code at commit hash
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.setup_release_branch.outputs.branch_name }}
          token: ${{ secrets.VEGA_CI_BOT_GITHUB_TOKEN }}

      - name: Reset and push release branch
        run: |
          BRANCH_NAME="${{ needs.setup_release_branch.outputs.branch_name }}"
          git reset --hard ${{ github.event.inputs.commitHash }}
          git push --force --set-upstream origin $BRANCH_NAME

  generate_release_notes:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Generate release notes
        id: release_notes
        uses: octokit/request-action@v2.3.0
        with:
          route: POST /repos/${{ github.repository }}/releases/generate-notes
          data: '{"tag_name": "${{ github.event.inputs.releaseVersion }}", "target_commitish": "${{ github.event.inputs.commitHash }}"}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    needs: generate_release_notes
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2.0.4
        with:
          tag_name: ${{ github.event.inputs.releaseVersion }}
          name: Release ${{ github.event.inputs.releaseVersion }}
          body: ${{ steps.generate_release_notes.outputs.data.body }}
          draft: false
          prerelease: ${{ github.event.inputs.environment == 'testnet' }}
