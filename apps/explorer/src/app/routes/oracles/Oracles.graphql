fragment ExplorerOracleDataConnection on OracleSpec {
  dataConnection(pagination: { first: 30 }) {
    edges {
      node {
        externalData {
          data {
            signers {
              signer {
                ... on ETHAddress {
                  address
                }
                ... on PubKey {
                  key
                }
              }
            }
            data {
              name
              value
            }
            matchedSpecIds
            broadcastAt
          }
        }
      }
    }
  }
}

fragment ExplorerOracleDataSource on OracleSpec {
  ...ExplorerOracleDataConnection
  dataSourceSpec {
    spec {
      id
      createdAt
      updatedAt
      status
      data {
        sourceType {
          ... on DataSourceDefinitionInternal {
            sourceType {
              ... on DataSourceSpecConfigurationTime {
                conditions {
                  value
                  operator
                }
              }
              ... on DataSourceSpecConfigurationTimeTrigger {
                conditions {
                  value
                  operator
                }
                triggers {
                  initial
                  every
                }
              }
            }
          }
          ... on DataSourceDefinitionExternal {
            sourceType {
              ... on EthCallSpec {
                abi
                args
                method
                requiredConfirmations
                address
                normalisers {
                  name
                  expression
                }
                trigger {
                  trigger {
                    ... on EthTimeTrigger {
                      initial
                      every
                      until
                    }
                  }
                }
                sourceChainId
                filters {
                  key {
                    name
                    type
                    numberDecimalPlaces
                  }
                  conditions {
                    value
                    operator
                  }
                }
              }
              ... on DataSourceSpecConfiguration {
                signers {
                  signer {
                    ... on ETHAddress {
                      address
                    }
                    ... on PubKey {
                      key
                    }
                  }
                }
                filters {
                  key {
                    name
                    type
                    numberDecimalPlaces
                  }
                  conditions {
                    value
                    operator
                  }
                }
              }
              ... on EthCallSpec {
                abi
                address
                requiredConfirmations
                method
                sourceChainId
                filters {
                  key {
                    type
                    name
                    numberDecimalPlaces
                  }
                  conditions {
                    value
                    operator
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

query ExplorerOracleSpecs {
  oracleSpecsConnection(pagination: { first: 30 }) {
    pageInfo {
      hasNextPage
    }
    edges {
      node {
        ...ExplorerOracleDataSource
      }
    }
  }
}

query ExplorerOracleSpecById($id: ID!) {
  oracleSpec(oracleSpecId: $id) {
    ...ExplorerOracleDataSource
  }
}
