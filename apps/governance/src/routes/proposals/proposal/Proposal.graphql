fragment NewMarketProductField on Proposal {
  terms {
    change {
      __typename
      ... on NewMarket {
        instrument {
          product {
            __typename
          }
        }
      }
    }
  }
}

fragment UpdateMarketState on Proposal {
  terms {
    change {
      __typename
      ... on UpdateMarketState {
        updateType
        market {
          decimalPlaces
          id
          tradableInstrument {
            instrument {
              product {
                __typename
                ... on Future {
                  quoteName
                }
                ... on Perpetual {
                  quoteName
                }
              }
              name
              code
            }
          }
        }
        updateType
        price
      }
    }
  }
}

fragment UpdateReferralProgram on Proposal {
  terms {
    change {
      __typename
      ... on UpdateReferralProgram {
        benefitTiers {
          minimumEpochs
          minimumRunningNotionalTakerVolume
          referralDiscountFactor
          referralRewardFactor
        }
        endOfProgram: endOfProgramTimestamp
        windowLength
        stakingTiers {
          minimumStakedTokens
          referralRewardMultiplier
        }
      }
    }
  }
}

fragment UpdateVolumeDiscountProgram on Proposal {
  terms {
    change {
      __typename
      ... on UpdateVolumeDiscountProgram {
        benefitTiers {
          minimumRunningNotionalTakerVolume
          volumeDiscountFactor
        }
        endOfProgramTimestamp
        windowLength
      }
    }
  }
}

fragment UpdateNetworkParameter on Proposal {
  terms {
    change {
      __typename
      ... on UpdateNetworkParameter {
        networkParameter {
          key
          value
        }
      }
    }
  }
}

query Proposal(
  $proposalId: ID!
  $includeNewMarketProductField: Boolean!
  $includeUpdateMarketState: Boolean!
  $includeUpdateReferralProgram: Boolean!
) {
  proposal(id: $proposalId) {
    ... on Proposal {
      id
      rationale {
        title
        description
      }
      reference
      state
      datetime
      rejectionReason
      party {
        id
      }
      errorDetails
      ...NewMarketProductField @include(if: $includeNewMarketProductField)
      ...UpdateMarketState @include(if: $includeUpdateMarketState)
      ...UpdateReferralProgram @include(if: $includeUpdateReferralProgram)
      ...UpdateVolumeDiscountProgram
      ...UpdateNetworkParameter
      terms {
        closingDatetime
        enactmentDatetime
        change {
          __typename
          ... on NewMarket {
            decimalPlaces
            metadata
            riskParameters {
              ... on LogNormalRiskModel {
                riskAversionParameter
                tau
                params {
                  mu
                  r
                  sigma
                }
              }
              ... on SimpleRiskModel {
                params {
                  factorLong
                  factorShort
                }
              }
            }
            instrument {
              name
              code
              product {
                ... on FutureProduct {
                  settlementAsset {
                    id
                    name
                    symbol
                    decimals
                    quantum
                  }
                  quoteName
                  dataSourceSpecBinding {
                    settlementDataProperty
                    tradingTerminationProperty
                  }
                  dataSourceSpecForSettlementData {
                    sourceType {
                      ... on DataSourceDefinitionInternal {
                        sourceType {
                          ... on DataSourceSpecConfigurationTime {
                            conditions {
                              operator
                              value
                            }
                          }
                        }
                      }
                      ... on DataSourceDefinitionExternal {
                        sourceType {
                          ... on DataSourceSpecConfiguration {
                            signers {
                              signer {
                                ... on PubKey {
                                  key
                                }
                                ... on ETHAddress {
                                  address
                                }
                              }
                            }
                            filters {
                              key {
                                name
                                type
                              }
                              conditions {
                                operator
                                value
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                ... on PerpetualProduct {
                  settlementAsset {
                    id
                    name
                    symbol
                    decimals
                    quantum
                  }
                  quoteName
                }
              }
            }
            priceMonitoringParameters {
              triggers {
                horizonSecs
                probability
                auctionExtensionSecs
              }
            }
            liquidityMonitoringParameters {
              targetStakeParameters {
                timeWindow
                scalingFactor
              }
            }
            positionDecimalPlaces
            linearSlippageFactor
          }
          ... on UpdateMarket {
            marketId
            updateMarketConfiguration {
              instrument {
                code
                product {
                  ... on UpdateFutureProduct {
                    quoteName
                    dataSourceSpecForSettlementData {
                      sourceType {
                        ... on DataSourceDefinitionInternal {
                          sourceType {
                            ... on DataSourceSpecConfigurationTime {
                              conditions {
                                operator
                                value
                              }
                            }
                          }
                        }
                        ... on DataSourceDefinitionExternal {
                          sourceType {
                            ... on DataSourceSpecConfiguration {
                              signers {
                                signer {
                                  ... on PubKey {
                                    key
                                  }
                                  ... on ETHAddress {
                                    address
                                  }
                                }
                              }
                              filters {
                                key {
                                  name
                                  type
                                }
                                conditions {
                                  operator
                                  value
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    # dataSourceSpecForTradingTermination {
                    #   sourceType {
                    #     ... on DataSourceDefinitionInternal {
                    #       sourceType {
                    #         ... on DataSourceSpecConfigurationTime {
                    #           conditions {
                    #             operator
                    #             value
                    #           }
                    #         }
                    #       }
                    #     }
                    #     ... on DataSourceDefinitionExternal {
                    #       sourceType {
                    #         ... on DataSourceSpecConfiguration {
                    #           signers {
                    #             signer {
                    #               ... on PubKey {
                    #                 key
                    #               }
                    #               ... on ETHAddress {
                    #                 address
                    #               }
                    #             }
                    #           }
                    #           filters {
                    #             key {
                    #               name
                    #               type
                    #             }
                    #             conditions {
                    #               operator
                    #               value
                    #             }
                    #           }
                    #         }
                    #       }
                    #     }
                    #   }
                    # }
                    dataSourceSpecBinding {
                      settlementDataProperty
                      tradingTerminationProperty
                    }
                  }
                  ... on UpdatePerpetualProduct {
                    quoteName
                    dataSourceSpecForSettlementData {
                      sourceType {
                        ... on DataSourceDefinitionInternal {
                          sourceType {
                            ... on DataSourceSpecConfigurationTime {
                              conditions {
                                operator
                                value
                              }
                            }
                          }
                        }
                        ... on DataSourceDefinitionExternal {
                          sourceType {
                            ... on DataSourceSpecConfiguration {
                              signers {
                                signer {
                                  ... on PubKey {
                                    key
                                  }
                                  ... on ETHAddress {
                                    address
                                  }
                                }
                              }
                              filters {
                                key {
                                  name
                                  type
                                }
                                conditions {
                                  operator
                                  value
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    dataSourceSpecBinding {
                      settlementDataProperty
                      settlementScheduleProperty
                    }
                  }
                }
              }
              metadata
              priceMonitoringParameters {
                triggers {
                  horizonSecs
                  probability
                  auctionExtensionSecs
                }
              }
              liquidityMonitoringParameters {
                targetStakeParameters {
                  timeWindow
                  scalingFactor
                }
              }
              riskParameters {
                ... on UpdateMarketSimpleRiskModel {
                  simple {
                    factorLong
                    factorShort
                  }
                }
                ... on UpdateMarketLogNormalRiskModel {
                  logNormal {
                    riskAversionParameter
                    tau
                    params {
                      r
                      sigma
                      mu
                    }
                  }
                }
              }
            }
          }
          ... on NewAsset {
            name
            symbol
            decimals
            quantum
            source {
              ... on BuiltinAsset {
                maxFaucetAmountMint
              }
              ... on ERC20 {
                contractAddress
                lifetimeLimit
                withdrawThreshold
              }
            }
          }
          ... on UpdateAsset {
            quantum
            assetId
            source {
              ... on UpdateERC20 {
                lifetimeLimit
                withdrawThreshold
              }
            }
          }
        }
      }
      votes {
        yes {
          totalTokens
          totalNumber
          totalEquityLikeShareWeight
        }
        no {
          totalTokens
          totalNumber
          totalEquityLikeShareWeight
        }
      }
    }
    ... on BatchProposal {
      id
      rationale {
        title
        description
      }
      reference
      state
      datetime
      rejectionReason
      party {
        id
      }
      errorDetails
      subProposals {
        datetime
        terms {
          closingDatetime
          enactmentDatetime
          change {
            __typename
          }
        }
      }
      votes {
        yes {
          totalTokens
          totalNumber
          totalEquityLikeShareWeight
        }
        no {
          totalTokens
          totalNumber
          totalEquityLikeShareWeight
        }
      }
    }
  }
}
