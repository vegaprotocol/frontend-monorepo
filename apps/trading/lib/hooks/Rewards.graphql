query RewardsPage($partyId: ID!) {
  party(id: $partyId) {
    id
    vestingStats {
      rewardBonusMultiplier
      quantumBalance
      epochSeq
    }
    activityStreak {
      activeFor
      isActive
      inactiveFor
      rewardDistributionMultiplier
      rewardVestingMultiplier
      epoch
      tradedVolume
      openVolume
    }
    vestingBalancesSummary {
      epoch
      vestingBalances {
        asset {
          ...AssetFields
        }
        balance
      }
      lockedBalances {
        asset {
          ...AssetFields
        }
        balance
        untilEpoch
      }
    }
  }
}

fragment RecurringTransferFields on RecurringTransfer {
  startEpoch
  endEpoch
  dispatchStrategy {
    capRewardFeeMultiple
    dispatchMetric
    dispatchMetricAssetId
    marketIdsInScope
    entityScope
    individualScope
    teamScope
    nTopPerformers
    stakingRequirement
    notionalTimeWeightedAveragePositionRequirement
    windowLength
    lockPeriod
    distributionStrategy
    transferInterval
    rankTable {
      startRank
      shareRatio
    }
  }
}

fragment RecurringGovernanceTransferFields on RecurringGovernanceTransfer {
  startEpoch
  endEpoch
  dispatchStrategy {
    capRewardFeeMultiple
    dispatchMetric
    dispatchMetricAssetId
    marketIdsInScope
    entityScope
    individualScope
    teamScope
    nTopPerformers
    stakingRequirement
    notionalTimeWeightedAveragePositionRequirement
    windowLength
    lockPeriod
    distributionStrategy
    transferInterval
    rankTable {
      startRank
      shareRatio
    }
  }
}

fragment ActiveRewardTransferFields on Transfer {
  amount
  id
  from
  fromAccountType
  to
  toAccountType
  asset {
    ...AssetFields
  }
  reference
  status
  timestamp
  gameId
  kind {
    ... on RecurringTransfer {
      ...RecurringTransferFields
    }
    ... on RecurringGovernanceTransfer {
      ...RecurringGovernanceTransferFields
    }
  }
  reason
}

query ActiveRewards(
  $isReward: Boolean
  $partyId: ID
  $direction: TransferDirection
  $gameId: ID
  $pagination: Pagination
) {
  transfersConnection(
    partyId: $partyId
    isReward: $isReward
    direction: $direction
    gameId: $gameId
    pagination: $pagination
  ) {
    edges {
      node {
        transfer {
          ...ActiveRewardTransferFields
        }
        fees {
          transferId
          amount
          epoch
        }
      }
    }
  }
}

query TWAP($partyId: ID!, $assetId: ID!, $gameId: ID!, $epochSeq: Int) {
  timeWeightedNotionalPosition(
    partyId: $partyId
    gameId: $gameId
    assetId: $assetId
    epochSeq: $epochSeq
  ) {
    assetId
    partyId
    gameId
    timeWeightedNotionalPosition
    lastUpdated
    epoch
  }
}

query RewardsHistory(
  $partyId: ID!
  $epochRewardSummariesPagination: Pagination
  $partyRewardsPagination: Pagination
  $fromEpoch: Int
  $toEpoch: Int
) {
  epochRewardSummaries(
    filter: { fromEpoch: $fromEpoch, toEpoch: $toEpoch }
    pagination: $epochRewardSummariesPagination
  ) {
    edges {
      node {
        epoch
        assetId
        amount
        rewardType
      }
    }
  }
  party(id: $partyId) {
    id
    rewardsConnection(
      fromEpoch: $fromEpoch
      toEpoch: $toEpoch
      pagination: $partyRewardsPagination
    ) {
      edges {
        node {
          amount
          percentageOfTotal
          receivedAt
          rewardType
          asset {
            ...AssetFields
          }
          party {
            id
          }
          epoch {
            id
          }
        }
      }
    }
  }
}

query RewardsEpoch {
  epoch {
    id
    timestamps {
      start
      end
      expiry
    }
  }
}

query MarketForRewards($marketId: ID!) {
  market(id: $marketId) {
    tradableInstrument {
      instrument {
        id
        name
        code
        metadata {
          tags
        }
      }
    }
  }
}
