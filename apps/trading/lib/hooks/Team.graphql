fragment TeamFields on Team {
  teamId
  referrer
  name
  teamUrl
  avatarUrl
  createdAt
  createdAtEpoch
  closed
  allowList
}

fragment TeamStatsFields on TeamStatistics {
  teamId
  totalQuantumVolume
  totalQuantumRewards
  totalGamesPlayed
  quantumRewards {
    epoch
    totalQuantumRewards
  }
  gamesPlayed
}

fragment TeamRefereeFields on TeamReferee {
  teamId
  referee
  joinedAt
  joinedAtEpoch
}

fragment TeamEntity on TeamGameEntity {
  rank
  volume
  rewardMetric
  rewardEarned
  totalRewardsEarned
  team {
    teamId
  }
}

fragment TeamGameFields on Game {
  id
  epoch
  numberOfParticipants
  entities {
    ... on TeamGameEntity {
      ...TeamEntity
    }
  }
}

fragment TeamMemberStatsFields on TeamMemberStatistics {
  partyId
  totalQuantumVolume
  totalQuantumRewards
  totalGamesPlayed
}

query Team($teamId: ID!, $partyId: ID, $aggregationEpochs: Int) {
  teams(teamId: $teamId) {
    edges {
      node {
        ...TeamFields
      }
    }
  }
  partyTeams: teams(partyId: $partyId) {
    edges {
      node {
        ...TeamFields
      }
    }
  }
  teamsStatistics(teamId: $teamId, aggregationEpochs: $aggregationEpochs) {
    edges {
      node {
        ...TeamStatsFields
      }
    }
  }
  teamReferees(teamId: $teamId) {
    edges {
      node {
        ...TeamRefereeFields
      }
    }
  }
  games(entityScope: ENTITY_SCOPE_TEAMS) {
    edges {
      node {
        ...TeamGameFields
      }
    }
  }
  teamMembersStatistics(
    teamId: $teamId
    aggregationEpochs: $aggregationEpochs
  ) {
    edges {
      node {
        ...TeamMemberStatsFields
      }
    }
  }
}
