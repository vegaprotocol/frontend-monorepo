fragment DataSourceFilter on Filter {
  key {
    name
    type
    numberDecimalPlaces
  }
  conditions {
    value
    operator
  }
}

fragment SourceType on DataSourceKind {
  ... on DataSourceDefinitionExternal {
    sourceType {
      ... on EthCallSpec {
        abi
        address
        args
        method
        requiredConfirmations
        normalisers {
          name
          expression
        }
        trigger {
          trigger {
            ... on EthTimeTrigger {
              initial
              every
              until
            }
          }
        }
        filters {
          key {
            name
            type
            numberDecimalPlaces
          }
          conditions {
            value
            operator
          }
        }
      }
      ... on DataSourceSpecConfiguration {
        signers {
          signer {
            ... on PubKey {
              key
            }
            ... on ETHAddress {
              address
            }
          }
        }
        filters {
          ...DataSourceFilter
        }
      }
    }
  }
  ... on DataSourceDefinitionInternal {
    sourceType {
      ... on DataSourceSpecConfigurationTime {
        conditions {
          operator
          value
        }
      }
      ... on DataSourceSpecConfigurationTimeTrigger {
        __typename
        triggers {
          initial
          every
        }
        conditions {
          operator
          value
        }
      }
    }
  }
}

fragment PriceConfiguration on CompositePriceConfiguration {
  decayWeight
  decayPower
  cashAmount
  SourceWeights
  SourceStalenessTolerance
  CompositePriceType
  dataSourcesSpec {
    sourceType {
      ...SourceType
    }
  }
  dataSourcesSpecBinding {
    priceSourceProperty
  }
}

fragment DataSource on DataSourceSpec {
  id
  data {
    sourceType {
      ...SourceType
    }
  }
}

fragment Future on Future {
  quoteName
  settlementAsset {
    id
    symbol
    name
    decimals
    quantum
  }
  dataSourceSpecForSettlementData {
    ...DataSource
  }
  dataSourceSpecForTradingTermination {
    ...DataSource
  }
  dataSourceSpecBinding {
    settlementDataProperty
    tradingTerminationProperty
  }
}

fragment Perpetual on Perpetual {
  quoteName
  fundingRateScalingFactor
  fundingRateLowerBound
  fundingRateUpperBound
  settlementAsset {
    id
    symbol
    name
    decimals
    quantum
  }
  dataSourceSpecForSettlementData {
    ...DataSource
  }
  dataSourceSpecForSettlementSchedule {
    ...DataSource
  }
  dataSourceSpecBinding {
    settlementDataProperty
    settlementScheduleProperty
  }
  internalCompositePriceConfig {
    ...PriceConfiguration
  }
}

fragment Spot on Spot {
  baseAsset {
    ...AssetListFields
  }
  quoteAsset {
    ...AssetListFields
  }
}

query MarketInfo($marketId: ID!) {
  market(id: $marketId) {
    id
    decimalPlaces
    positionDecimalPlaces
    tickSize
    state
    tradingMode
    linearSlippageFactor
    parentMarketID
    successorMarketID
    marketProposal {
      ... on Proposal {
        id
        rationale {
          title
          description
        }
      }
    }
    marketTimestamps {
      proposed
      pending
      open
      close
    }
    markPriceConfiguration {
      ...PriceConfiguration
    }
    openingAuction {
      durationSecs
      volume
    }
    accountsConnection {
      edges {
        node {
          type
          asset {
            id
          }
          balance
        }
      }
    }
    fees {
      factors {
        makerFee
        infrastructureFee
        liquidityFee
      }
      liquidityFeeSettings {
        feeConstant
        method
      }
    }
    priceMonitoringSettings {
      parameters {
        triggers {
          horizonSecs
          probability
          auctionExtensionSecs
        }
      }
    }
    riskFactors {
      market
      short
      long
    }
    liquidityMonitoringParameters {
      targetStakeParameters {
        timeWindow
        scalingFactor
      }
    }
    liquiditySLAParameters {
      priceRange
      commitmentMinTimeFraction
      performanceHysteresisEpochs
      slaCompetitionFactor
    }
    liquidationStrategy {
      disposalTimeStep
      disposalFraction
      fullDisposalSize
      maxFractionConsumed
    }
    tradableInstrument {
      instrument {
        id
        name
        code
        metadata {
          tags
        }
        product {
          ... on Future {
            ...Future
          }
          ... on Perpetual {
            ...Perpetual
          }
          ... on Spot {
            ...Spot
          }
        }
      }
      riskModel {
        ... on LogNormalRiskModel {
          tau
          riskAversionParameter
          params {
            r
            sigma
            mu
          }
        }
        ... on SimpleRiskModel {
          params {
            factorLong
            factorShort
          }
        }
      }
      marginCalculator {
        scalingFactors {
          searchLevel
          initialMargin
          collateralRelease
        }
      }
    }
  }
}
